name: Deploy Three Spring Boot Applications

on:
  push:
    branches:
      - main # Executa o workflow apenas na branch principal.

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Configurações comuns
      - name: Checkout Terraform repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17' # Alterar se usar outra versão do Java

      - name: Cache Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      # Build e deploy de cada aplicação
      - name: Build and Deploy Pedido Application
        run: |
          # Clonar o repositório
          git clone https://github.com/brunobucci/soat7grupo5-pedido.git pedido
          cd pedido

          # Executar testes com cobertura
          mvn clean verify
          coverage=$(mvn jacoco:report | grep -oP 'instructionCoverage\s*=\s*\K[0-9.]+')
          echo "Coverage for Pedido: $coverage%"
          if (( $(echo "$coverage < 80" | bc -l) )); then
            echo "Coverage for Pedido is below 80%! Exiting."
            exit 1
          fi

          # Build do artefato
          mvn clean package -DskipTests
          cd ..

          # Deploy para o EC2
          scp -o StrictHostKeyChecking=no -i "$AWS_PRIVATE_KEY" pedido/target/*.jar ec2-user@${AWS_HOST_PEDIDO}:/home/ec2-user/
          ssh -o StrictHostKeyChecking=no -i "$AWS_PRIVATE_KEY" ec2-user@${AWS_HOST_PEDIDO} "sudo systemctl restart pedido-app"

      - name: Build and Deploy Producao Application
        run: |
          # Clonar o repositório
          git clone https://github.com/brunobucci/soat7grupo5-producao.git producao
          cd producao

          # Executar testes com cobertura
          mvn clean verify
          coverage=$(mvn jacoco:report | grep -oP 'instructionCoverage\s*=\s*\K[0-9.]+')
          echo "Coverage for Producao: $coverage%"
          if (( $(echo "$coverage < 80" | bc -l) )); then
            echo "Coverage for Producao is below 80%! Exiting."
            exit 1
          fi

          # Build do artefato
          mvn clean package -DskipTests
          cd ..

          # Deploy para o EC2
          scp -o StrictHostKeyChecking=no -i "$AWS_PRIVATE_KEY" producao/target/*.jar ec2-user@${AWS_HOST_PRODUCAO}:/home/ec2-user/
          ssh -o StrictHostKeyChecking=no -i "$AWS_PRIVATE_KEY" ec2-user@${AWS_HOST_PRODUCAO} "sudo systemctl restart producao-app"

      - name: Build and Deploy Pagamento Application
        run: |
          # Clonar o repositório
          git clone https://github.com/brunobucci/soat7grupo5-pagamento.git pagamento
          cd pagamento

          # Executar testes com cobertura
          mvn clean verify
          coverage=$(mvn jacoco:report | grep -oP 'instructionCoverage\s*=\s*\K[0-9.]+')
          echo "Coverage for Pagamento: $coverage%"
          if (( $(echo "$coverage < 80" | bc -l) )); then
            echo "Coverage for Pagamento is below 80%! Exiting."
            exit 1
          fi

          # Build do artefato
          mvn clean package -DskipTests
          cd ..

          # Deploy para o EC2
          scp -o StrictHostKeyChecking=no -i "$AWS_PRIVATE_KEY" pagamento/target/*.jar ec2-user@${AWS_HOST_PAGAMENTO}:/home/ec2-user/
          ssh -o StrictHostKeyChecking=no -i "$AWS_PRIVATE_KEY" ec2-user@${AWS_HOST_PAGAMENTO} "sudo systemctl restart pagamento-app"
